// <auto-generated />
using Loot_Lo_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Loot_Lo_API.Migrations
{
    [DbContext(typeof(LootLoDbContext))]
    [Migration("20210607092938_03_UpdateProductTable")]
    partial class _03_UpdateProductTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Loot_Lo_API.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminEmail")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AdminName")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AdminPassword")
                        .HasColumnType("varchar(20)");

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(20)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CustomerPassword")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CustomerPhoneNo")
                        .HasColumnType("varchar(20)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.CustomerOrderDetails", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerRefId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerRefId");

                    b.ToTable("CustomerOrderDetails");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.OrderedProductQuantity", b =>
                {
                    b.Property<int>("OrderedProductQuantityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderRefId")
                        .HasColumnType("int");

                    b.Property<int>("ProductRefId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderedProductQuantityId");

                    b.HasIndex("OrderRefId");

                    b.HasIndex("ProductRefId");

                    b.ToTable("OrderedProductQuantity");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryRefId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryRefId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.CustomerOrderDetails", b =>
                {
                    b.HasOne("Loot_Lo_API.Models.Customer", "Customer")
                        .WithMany("CustomerOrderDetails")
                        .HasForeignKey("CustomerRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.OrderedProductQuantity", b =>
                {
                    b.HasOne("Loot_Lo_API.Models.CustomerOrderDetails", "CustomerOrderDetails")
                        .WithMany("OrderedProductQuantity")
                        .HasForeignKey("OrderRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loot_Lo_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerOrderDetails");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.Product", b =>
                {
                    b.HasOne("Loot_Lo_API.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.Customer", b =>
                {
                    b.Navigation("CustomerOrderDetails");
                });

            modelBuilder.Entity("Loot_Lo_API.Models.CustomerOrderDetails", b =>
                {
                    b.Navigation("OrderedProductQuantity");
                });
#pragma warning restore 612, 618
        }
    }
}
